"use strict";(()=>{var e={};e.id=946,e.ids=[946],e.modules={38013:e=>{e.exports=require("mongodb")},11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},63477:e=>{e.exports=require("querystring")},57310:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},52640:(e,r,t)=>{t.r(r),t.d(r,{headerHooks:()=>f,originalPathname:()=>y,patchFetch:()=>b,requestAsyncStorage:()=>g,routeModule:()=>m,serverHooks:()=>h,staticGenerationAsyncStorage:()=>w,staticGenerationBailout:()=>x});var o={};t.r(o),t.d(o,{GET:()=>p,POST:()=>u});var s=t(95419),a=t(69108),n=t(99678),i=t(78070),l=t(81355),c=t(25459),d=t(61259);async function u(e){try{let r=await e.json(),t=(await c.Z).db("explorebhutan"),o={...r,bookingRef:`BT${Date.now()}${Math.floor(1e3*Math.random())}`,status:"pending",createdAt:new Date,updatedAt:new Date};return await t.collection("bookings").insertOne(o),i.Z.json({success:!0,message:"Booking created successfully",bookingRef:o.bookingRef})}catch(e){return console.error("Booking error:",e),i.Z.json({success:!1,message:"Failed to create booking"},{status:500})}}async function p(){try{await (0,l.getServerSession)(d.authOptions);let e=(await c.Z).db("explorebhutan"),r=await e.collection("bookings").find({}).sort({createdAt:-1}).toArray();return i.Z.json(r)}catch(e){return console.error("Fetch error:",e),i.Z.json({error:"Failed to fetch bookings"},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/bookings/route",pathname:"/api/bookings",filename:"route",bundlePath:"app/api/bookings/route"},resolvedPagePath:"D:\\Tshewang Lhamo\\02220251_Project01 - Copy\\src\\app\\api\\bookings\\route.js",nextConfigOutput:"",userland:o}),{requestAsyncStorage:g,staticGenerationAsyncStorage:w,serverHooks:h,headerHooks:f,staticGenerationBailout:x}=m,y="/api/bookings/route";function b(){return(0,n.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:w})}},61259:(e,r,t)=>{t.r(r),t.d(r,{GET:()=>p,POST:()=>p});var o=t(81355),s=t.n(o),a=t(86485),n=t(7529),i=t(99340),l=t(69548);let c=process.env.ADMIN_USERNAME||"admin",d=process.env.ADMIN_PASSWORD_HASH||"$2b$10$sHscwNjG0kDUwQE06eUPIOt59HnOEu3Ae4Dd7cOYrEHRZ6gnJzxeW",u={providers:[(0,a.Z)({name:"Credentials",credentials:{username:{label:"Email",type:"text",placeholder:"you@example.com"},password:{label:"Password",type:"password"}},async authorize(e){if(!e?.username||!e?.password)throw Error("Missing username or password");if(e.username===c){if(!await n.ZP.compare(e.password,d))throw Error("Invalid credentials");return{id:"admin-id",name:"Administrator",email:c,role:"admin"}}await (0,i.Z)();let r=await l.Z.findOne({email:e.username});if(!r)throw Error("No user found with that email");if(!await n.ZP.compare(e.password,r.password))throw Error("Invalid credentials");return{id:r._id.toString(),name:`${r.firstName} ${r.lastName}`,email:r.email,role:"user"}}})],pages:{signIn:"/login",error:"/login?error"},callbacks:{jwt:async({token:e,user:r})=>(r&&(e.role=r.role,e.name=r.name,e.email=r.email,e.id=r.id),e),session:async({session:e,token:r})=>(e.user={name:r.name,email:r.email,id:r.id,role:r.role},e),redirect:async({url:e,baseUrl:r,token:t})=>t?.role==="admin"?`${r}/admin`:`${r}/home`},session:{strategy:"jwt",maxAge:86400},secret:process.env.NEXTAUTH_SECRET},p=s()(u)},99340:(e,r,t)=>{t.d(r,{Z:()=>i});var o=t(11185),s=t.n(o);let a=process.env.MONGODB_URI;if(!a)throw Error("Please define the MONGODB_URI environment variable inside .env");let n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null});let i=async function(){if(n.conn)return n.conn;n.promise||(n.promise=s().connect(a,{bufferCommands:!1}).then(e=>e));try{n.conn=await n.promise}catch(e){throw n.promise=null,e}return n.conn}},25459:(e,r,t)=>{t.d(r,{Z:()=>a});var o=t(38013);if(!process.env.MONGODB_URI)throw Error("Please add your Mongo URI to .env.local");let s=process.env.MONGODB_URI,a=new o.MongoClient(s,{}).connect()},69548:(e,r,t)=>{t.d(r,{Z:()=>i});var o=t(11185),s=t.n(o),a=t(7529);let n=new(s()).Schema({firstName:{type:String,required:[!0,"First name is required"],trim:!0},lastName:{type:String,required:[!0,"Last name is required"],trim:!0},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0,match:[/.+@.+\..+/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Password is required"],minlength:[6,"Password must be at least 6 characters long"]}},{timestamps:!0});n.pre("save",async function(e){if(!this.isModified("password"))return e();try{let r=await a.ZP.genSalt(10);this.password=await a.ZP.hash(this.password,r),e()}catch(r){e(r)}}),n.methods.matchPassword=async function(e){return await a.ZP.compare(e,this.password)};let i=s().models.Registration||s().model("Registration",n)}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[638,118,70,123],()=>t(52640));module.exports=o})();